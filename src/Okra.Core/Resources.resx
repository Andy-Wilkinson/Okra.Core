<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmbiguousConstructorMatch" xml:space="preserve">
    <value>Multiple constructors accepting all given argument types have been found in type '{0}'. There should only be one applicable constructor.</value>
    <comment>{0} = service type</comment>
  </data>
  <data name="CannotLocateImplementation" xml:space="preserve">
    <value>Unable to locate implementation '{0}' for service '{1}'.</value>
    <comment>{0} = implementation type, {1} = service type</comment>
  </data>
  <data name="CannotResolveService" xml:space="preserve">
    <value>Unable to resolve service for type '{0}' while attempting to activate '{1}'.</value>
    <comment>{0} = service which cannot be resolved, {1} = service being activated</comment>
  </data>
  <data name="Exception_ArgumentException_EnumerableContainsNullPage" xml:space="preserve">
    <value>The list of pages cannot contain a 'null' page.</value>
  </data>
  <data name="Exception_ArgumentException_ShouldBeAMemberAccessLambdaExpression" xml:space="preserve">
    <value>The argument must be a member access lambda expression.</value>
  </data>
  <data name="Exception_ArgumentException_SpecifiedEnumIsNotDefined" xml:space="preserve">
    <value>The argument contains an undefined enumeration value.</value>
  </data>
  <data name="Exception_ArgumentException_StringIsNullOrEmpty" xml:space="preserve">
    <value>The argument cannot be null or an empty string.</value>
  </data>
  <data name="Exception_ArgumentOutOfRange_ArrayIndexOutOfRange" xml:space="preserve">
    <value>The specified index is outside the bounds of the array.</value>
  </data>
  <data name="Exception_ArgumentOutOfRange_ParameterMustBePositive" xml:space="preserve">
    <value>The parameter must be greater than zero.</value>
  </data>
  <data name="Exception_ArgumentOutOfRange_ParameterMustBeZeroOrPositive" xml:space="preserve">
    <value>The parameter must be greater than or equal to zero.</value>
  </data>
  <data name="Exception_InvalidOperation_ActivationKindNotSupported" xml:space="preserve">
    <value>The specified ActivationKind is not supported.</value>
  </data>
  <data name="Exception_InvalidOperation_CannotDisposeRootAppContainer" xml:space="preserve">
    <value>You cannot dispose the root AppContainer.</value>
  </data>
  <data name="Exception_InvalidOperation_CannotGoBackWithEmptyBackStack" xml:space="preserve">
    <value>You cannot navigate backwards as the back stack is empty.</value>
  </data>
  <data name="Exception_InvalidOperation_CannotGoForwardWithEmptyForwardStack" xml:space="preserve">
    <value>You cannot navigate forwards as the forward stack is empty.</value>
  </data>
  <data name="Exception_InvalidOperation_CannotModifyReadOnlyCollection" xml:space="preserve">
    <value>Cannot modify a read-only collection.</value>
  </data>
  <data name="Exception_InvalidOperation_CannotModifyShareProperties" xml:space="preserve">
    <value>Cannot modify share properties as a share target.</value>
  </data>
  <data name="Exception_InvalidOperation_CannotNavigateAsPageIsNotFound" xml:space="preserve">
    <value>Cannot navigate as a page named '{0}' does not exist.</value>
  </data>
  <data name="Exception_InvalidOperation_CannotRegisterServiceMultipleTimes" xml:space="preserve">
    <value>You cannot register a service multiple times.</value>
  </data>
  <data name="Exception_InvalidOperation_CannotUnregisterUnregisteredService" xml:space="preserve">
    <value>Cannot unregister the service as it is not currently registered.</value>
  </data>
  <data name="Exception_InvalidOperation_ConstructorNotSupportedForAction" xml:space="preserve">
    <value>The called constructor is not supported for the action '{0}'.</value>
  </data>
  <data name="Exception_InvalidOperation_PropertyCannotBeSetAfterActivation" xml:space="preserve">
    <value>The '{0}' property cannot be set after the application has been activated.</value>
  </data>
  <data name="Exception_InvalidOperation_ServiceAlreadyInjected" xml:space="preserve">
    <value>The '{0}' service has already been injected into the container.</value>
  </data>
  <data name="Exception_InvalidOperation_ServiceNotInjected" xml:space="preserve">
    <value>The service '{0}' has not been injected into the container.</value>
  </data>
  <data name="Exception_InvalidOperation_SpecifiedPageDoesNotExistInNavigationStack" xml:space="preserve">
    <value>The specified page '{0}' does not exist in the navigation stack.</value>
  </data>
  <data name="Exception_InvalidOperation_BootstrapperNotInitialized" xml:space="preserve">
    <value>The bootstrapper must be initialized before performing this operation.</value>
  </data>
  <data name="NoConstructorMatch" xml:space="preserve">
    <value>A suitable constructor for type '{0}' could not be located. Ensure the type is concrete and services are registered for all parameters of a public constructor.</value>
    <comment>{0} = service type</comment>
  </data>
  <data name="NoServiceRegistered" xml:space="preserve">
    <value>No service for type '{0}' has been registered.</value>
    <comment>{0} = service type</comment>
  </data>
  <data name="TryAddIndistinguishableTypeToEnumerable" xml:space="preserve">
    <value>Implementation type cannot be '{0}' because it is indistinguishable from other services registered for '{1}'.</value>
    <comment>{0} = implementation type, {1} = service type</comment>
  </data>
</root>