<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\..\packages\xunit.runner.visualstudio.2.1.0\build\net20\xunit.runner.visualstudio.props" Condition="Exists('..\..\..\packages\xunit.runner.visualstudio.2.1.0\build\net20\xunit.runner.visualstudio.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{6A432A38-A7E4-4FA7-8169-D7C6F30524D5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Okra.MEF.Tests</RootNamespace>
    <AssemblyName>Okra.MEF.PortableCore.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
    <Reference Include="xunit.abstractions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\xunit.abstractions.2.0.0\lib\net35\xunit.abstractions.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="xunit.assert, Version=2.1.0.3179, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\xunit.assert.2.1.0\lib\dotnet\xunit.assert.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="xunit.core, Version=2.1.0.3179, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\xunit.extensibility.core.2.1.0\lib\dotnet\xunit.core.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="xunit.execution.desktop, Version=2.1.0.3179, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\xunit.extensibility.execution.2.1.0\lib\net45\xunit.execution.desktop.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="DependencyInjection\DependencyInjectionSpecificationTests.cs" />
    <Compile Include="DependencyInjection\ServiceProviderExtensionsFixture.cs" />
    <Compile Include="Microsoft.AspNetCore.Testing\CultureReplacer.cs" />
    <Compile Include="Microsoft.AspNetCore.Testing\ExceptionAssert.cs" />
    <Compile Include="Microsoft.AspNetCore.Testing\TestPlatformHelper.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\ActivatorUtilitiesTests.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\DependencyInjectionSpecificationTests.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\AnotherClass.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\AnotherClassAcceptingData.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ClassWithAmbiguousCtors.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ClassWithInternalConstructor.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ClassWithNestedReferencesToProvider.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ClassWithOptionalArgsCtor.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ClassWithPrivateCtor.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ClassWithProtectedConstructor.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ClassWithStaticCtor.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ClassWithThrowingCtor.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ClassWithThrowingEmptyCtor.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\CreationCountFakeService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\FakeOneMultipleService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\FakeOpenGenericService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\FakeOuterService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\FakeService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\FakeTwoMultipleService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\IFactoryService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\IFakeEveryService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\IFakeMultipleService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\IFakeOpenGenericService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\IFakeOuterService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\IFakeScopedService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\IFakeService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\IFakeServiceInstance.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\IFakeSingletonService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\INonexistentService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ScopedFactoryService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\ServiceAcceptingFactoryService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\TransientFactoryService.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\Fakes\TypeWithSupersetConstructors.cs" />
    <Compile Include="Microsoft.Extensions.DependencyInjection.Specification.Tests\ServiceCollection.cs" />
    <Compile Include="OkraBootstrapperFixture.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\src\Okra.Core\Okra.PortableCore\Okra.PortableCore.csproj">
      <Project>{7b05b679-6649-430c-9575-a19e2120169b}</Project>
      <Name>Okra.PortableCore</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\..\src\Okra.MEF\Okra.MEF.PortableCore\Okra.MEF.PortableCore.csproj">
      <Project>{fb46a822-c786-40da-82f8-34efa9c69b55}</Project>
      <Name>Okra.MEF.PortableCore</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\..\..\packages\xunit.runner.visualstudio.2.1.0\build\net20\xunit.runner.visualstudio.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\..\packages\xunit.runner.visualstudio.2.1.0\build\net20\xunit.runner.visualstudio.props'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>